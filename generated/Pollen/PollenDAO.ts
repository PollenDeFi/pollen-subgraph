// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AssetAdded extends ethereum.Event {
  get params(): AssetAdded__Params {
    return new AssetAdded__Params(this);
  }
}

export class AssetAdded__Params {
  _event: AssetAdded;

  constructor(event: AssetAdded) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AssetRemoved extends ethereum.Event {
  get params(): AssetRemoved__Params {
    return new AssetRemoved__Params(this);
  }
}

export class AssetRemoved__Params {
  _event: AssetRemoved;

  constructor(event: AssetRemoved) {
    this._event = event;
  }

  get asset(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Executed extends ethereum.Event {
  get params(): Executed__Params {
    return new Executed__Params(this);
  }
}

export class Executed__Params {
  _event: Executed;

  constructor(event: Executed) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NewOwner extends ethereum.Event {
  get params(): NewOwner__Params {
    return new NewOwner__Params(this);
  }
}

export class NewOwner__Params {
  _event: NewOwner;

  constructor(event: NewOwner) {
    this._event = event;
  }

  get newOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PointsRewarded extends ethereum.Event {
  get params(): PointsRewarded__Params {
    return new PointsRewarded__Params(this);
  }
}

export class PointsRewarded__Params {
  _event: PointsRewarded;

  constructor(event: PointsRewarded) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get kind(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get points(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PollenPrice extends ethereum.Event {
  get params(): PollenPrice__Params {
    return new PollenPrice__Params(this);
  }
}

export class PollenPrice__Params {
  _event: PollenPrice;

  constructor(event: PollenPrice) {
    this._event = event;
  }

  get price(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Redeemed extends ethereum.Event {
  get params(): Redeemed__Params {
    return new Redeemed__Params(this);
  }
}

export class Redeemed__Params {
  _event: Redeemed;

  constructor(event: Redeemed) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pollenAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RewardParamsUpdated extends ethereum.Event {
  get params(): RewardParamsUpdated__Params {
    return new RewardParamsUpdated__Params(this);
  }
}

export class RewardParamsUpdated__Params {
  _event: RewardParamsUpdated;

  constructor(event: RewardParamsUpdated) {
    this._event = event;
  }
}

export class RewardWithdrawal extends ethereum.Event {
  get params(): RewardWithdrawal__Params {
    return new RewardWithdrawal__Params(this);
  }
}

export class RewardWithdrawal__Params {
  _event: RewardWithdrawal;

  constructor(event: RewardWithdrawal) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class StatusChanged extends ethereum.Event {
  get params(): StatusChanged__Params {
    return new StatusChanged__Params(this);
  }
}

export class StatusChanged__Params {
  _event: StatusChanged;

  constructor(event: StatusChanged) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newStatus(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get oldStatus(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class StemAllocation extends ethereum.Event {
  get params(): StemAllocation__Params {
    return new StemAllocation__Params(this);
  }
}

export class StemAllocation__Params {
  _event: StemAllocation;

  constructor(event: StemAllocation) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Submitted extends ethereum.Event {
  get params(): Submitted__Params {
    return new Submitted__Params(this);
  }
}

export class Submitted__Params {
  _event: Submitted;

  constructor(event: Submitted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposalType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get submitter(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get snapshotId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class VotedOn extends ethereum.Event {
  get params(): VotedOn__Params {
    return new VotedOn__Params(this);
  }
}

export class VotedOn__Params {
  _event: VotedOn;

  constructor(event: VotedOn) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get vote(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get votes(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class VotingTermsSwitched extends ethereum.Event {
  get params(): VotingTermsSwitched__Params {
    return new VotingTermsSwitched__Params(this);
  }
}

export class VotingTermsSwitched__Params {
  _event: VotingTermsSwitched;

  constructor(event: VotingTermsSwitched) {
    this._event = event;
  }

  get termsId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isEnabled(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class PollenDAO__getMemberRewardsResultValue0Struct extends ethereum.Tuple {
  get lastUpdateBlock(): BigInt {
    return this[0].toBigInt();
  }

  get points(): BigInt {
    return this[1].toBigInt();
  }

  get entitled(): BigInt {
    return this[2].toBigInt();
  }

  get adjustment(): BigInt {
    return this[3].toBigInt();
  }
}

export class PollenDAO__getRewardTotalsResultValue0Struct extends ethereum.Tuple {
  get lastAccumBlock(): BigInt {
    return this[0].toBigInt();
  }

  get accStemPerPoint(): BigInt {
    return this[1].toBigInt();
  }

  get totalPoints(): BigInt {
    return this[2].toBigInt();
  }
}

export class PollenDAO__rewardParamsResult {
  value0: i32;
  value1: i32;
  value2: i32;
  value3: i32;
  value4: i32;
  value5: BigInt;

  constructor(
    value0: i32,
    value1: i32,
    value2: i32,
    value3: i32,
    value4: i32,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1))
    );
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }
}

export class PollenDAO__getProposalResultTermsStruct extends ethereum.Tuple {
  get proposalType(): i32 {
    return this[0].toI32();
  }

  get orderType(): i32 {
    return this[1].toI32();
  }

  get baseCcyType(): i32 {
    return this[2].toI32();
  }

  get assetTokenType(): i32 {
    return this[3].toI32();
  }

  get votingTermsId(): i32 {
    return this[4].toI32();
  }

  get __reserved1(): BigInt {
    return this[5].toBigInt();
  }

  get submitter(): Address {
    return this[6].toAddress();
  }

  get executor(): Address {
    return this[7].toAddress();
  }

  get __reserved2(): BigInt {
    return this[8].toBigInt();
  }

  get assetTokenAddress(): Address {
    return this[9].toAddress();
  }

  get pollenAmount(): BigInt {
    return this[10].toBigInt();
  }

  get assetTokenAmount(): BigInt {
    return this[11].toBigInt();
  }
}

export class PollenDAO__getProposalResultParamsStruct extends ethereum.Tuple {
  get votingOpen(): BigInt {
    return this[0].toBigInt();
  }

  get votingExpiry(): BigInt {
    return this[1].toBigInt();
  }

  get executionOpen(): BigInt {
    return this[2].toBigInt();
  }

  get executionExpiry(): BigInt {
    return this[3].toBigInt();
  }

  get snapshotId(): BigInt {
    return this[4].toBigInt();
  }

  get passVotes(): BigInt {
    return this[5].toBigInt();
  }
}

export class PollenDAO__getProposalResult {
  value0: PollenDAO__getProposalResultTermsStruct;
  value1: PollenDAO__getProposalResultParamsStruct;
  value2: string;

  constructor(
    value0: PollenDAO__getProposalResultTermsStruct,
    value1: PollenDAO__getProposalResultParamsStruct,
    value2: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    return map;
  }
}

export class PollenDAO__getProposalStateResultStateStruct extends ethereum.Tuple {
  get status(): i32 {
    return this[0].toI32();
  }

  get yesVotes(): BigInt {
    return this[1].toBigInt();
  }

  get noVotes(): BigInt {
    return this[2].toBigInt();
  }
}

export class PollenDAO__getVoteDataResultValue0Struct extends ethereum.Tuple {
  get state(): i32 {
    return this[0].toI32();
  }

  get votesNum(): BigInt {
    return this[1].toBigInt();
  }
}

export class PollenDAO__getVotingTermsResultValue0Struct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get isExclPools(): boolean {
    return this[1].toBoolean();
  }

  get quorum(): i32 {
    return this[2].toI32();
  }

  get votingExpiryDelay(): BigInt {
    return this[3].toBigInt();
  }

  get executionOpenDelay(): BigInt {
    return this[4].toBigInt();
  }

  get executionExpiryDelay(): BigInt {
    return this[5].toBigInt();
  }
}

export class PollenDAO extends ethereum.SmartContract {
  static bind(address: Address): PollenDAO {
    return new PollenDAO("PollenDAO", address);
  }

  getMemberPoints(member: Address): BigInt {
    let result = super.call(
      "getMemberPoints",
      "getMemberPoints(address):(uint256)",
      [ethereum.Value.fromAddress(member)]
    );

    return result[0].toBigInt();
  }

  try_getMemberPoints(member: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getMemberPoints",
      "getMemberPoints(address):(uint256)",
      [ethereum.Value.fromAddress(member)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMemberRewards(
    member: Address
  ): PollenDAO__getMemberRewardsResultValue0Struct {
    let result = super.call(
      "getMemberRewards",
      "getMemberRewards(address):((uint32,uint64,uint64,uint96))",
      [ethereum.Value.fromAddress(member)]
    );

    return result[0].toTuple() as PollenDAO__getMemberRewardsResultValue0Struct;
  }

  try_getMemberRewards(
    member: Address
  ): ethereum.CallResult<PollenDAO__getMemberRewardsResultValue0Struct> {
    let result = super.tryCall(
      "getMemberRewards",
      "getMemberRewards(address):((uint32,uint64,uint64,uint96))",
      [ethereum.Value.fromAddress(member)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PollenDAO__getMemberRewardsResultValue0Struct
    );
  }

  getPendingStem(member: Address): BigInt {
    let result = super.call(
      "getPendingStem",
      "getPendingStem(address):(uint256)",
      [ethereum.Value.fromAddress(member)]
    );

    return result[0].toBigInt();
  }

  try_getPendingStem(member: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPendingStem",
      "getPendingStem(address):(uint256)",
      [ethereum.Value.fromAddress(member)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRewardTotals(): PollenDAO__getRewardTotalsResultValue0Struct {
    let result = super.call(
      "getRewardTotals",
      "getRewardTotals():((uint32,uint112,uint112))",
      []
    );

    return result[0].toTuple() as PollenDAO__getRewardTotalsResultValue0Struct;
  }

  try_getRewardTotals(): ethereum.CallResult<
    PollenDAO__getRewardTotalsResultValue0Struct
  > {
    let result = super.tryCall(
      "getRewardTotals",
      "getRewardTotals():((uint32,uint112,uint112))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PollenDAO__getRewardTotalsResultValue0Struct
    );
  }

  rewardParams(): PollenDAO__rewardParamsResult {
    let result = super.call(
      "rewardParams",
      "rewardParams():(uint16,uint16,uint16,uint16,uint16,uint176)",
      []
    );

    return new PollenDAO__rewardParamsResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toI32(),
      result[3].toI32(),
      result[4].toI32(),
      result[5].toBigInt()
    );
  }

  try_rewardParams(): ethereum.CallResult<PollenDAO__rewardParamsResult> {
    let result = super.tryCall(
      "rewardParams",
      "rewardParams():(uint16,uint16,uint16,uint16,uint16,uint176)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PollenDAO__rewardParamsResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toI32(),
        value[3].toI32(),
        value[4].toI32(),
        value[5].toBigInt()
      )
    );
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getPollenAddress(): Address {
    let result = super.call(
      "getPollenAddress",
      "getPollenAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getPollenAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPollenAddress",
      "getPollenAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getStemAddress(): Address {
    let result = super.call("getStemAddress", "getStemAddress():(address)", []);

    return result[0].toAddress();
  }

  try_getStemAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getStemAddress",
      "getStemAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRateQuoterAddress(): Address {
    let result = super.call(
      "getRateQuoterAddress",
      "getRateQuoterAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getRateQuoterAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRateQuoterAddress",
      "getRateQuoterAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPollenPrice(): BigInt {
    let result = super.call("getPollenPrice", "getPollenPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getPollenPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPollenPrice",
      "getPollenPrice():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProposalCount(): BigInt {
    let result = super.call(
      "getProposalCount",
      "getProposalCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getProposalCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProposalCount",
      "getProposalCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getProposal(proposalId: BigInt): PollenDAO__getProposalResult {
    let result = super.call(
      "getProposal",
      "getProposal(uint256):((uint8,uint8,uint8,uint8,uint8,uint64,address,address,uint96,address,uint96,uint256),(uint32,uint32,uint32,uint32,uint32,uint96),string)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );

    return new PollenDAO__getProposalResult(
      result[0].toTuple() as PollenDAO__getProposalResultTermsStruct,
      result[1].toTuple() as PollenDAO__getProposalResultParamsStruct,
      result[2].toString()
    ) as PollenDAO__getProposalResult;
  }

  try_getProposal(
    proposalId: BigInt
  ): ethereum.CallResult<PollenDAO__getProposalResult> {
    let result = super.tryCall(
      "getProposal",
      "getProposal(uint256):((uint8,uint8,uint8,uint8,uint8,uint64,address,address,uint96,address,uint96,uint256),(uint32,uint32,uint32,uint32,uint32,uint96),string)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PollenDAO__getProposalResult(
        value[0].toTuple() as PollenDAO__getProposalResultTermsStruct,
        value[1].toTuple() as PollenDAO__getProposalResultParamsStruct,
        value[2].toString()
      ) as PollenDAO__getProposalResult
    );
  }

  getProposalState(
    proposalId: BigInt
  ): PollenDAO__getProposalStateResultStateStruct {
    let result = super.call(
      "getProposalState",
      "getProposalState(uint256):((uint8,uint96,uint96))",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );

    return result[0].toTuple() as PollenDAO__getProposalStateResultStateStruct;
  }

  try_getProposalState(
    proposalId: BigInt
  ): ethereum.CallResult<PollenDAO__getProposalStateResultStateStruct> {
    let result = super.tryCall(
      "getProposalState",
      "getProposalState(uint256):((uint8,uint96,uint96))",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PollenDAO__getProposalStateResultStateStruct
    );
  }

  getVoteData(
    voter: Address,
    proposalId: BigInt
  ): PollenDAO__getVoteDataResultValue0Struct {
    let result = super.call(
      "getVoteData",
      "getVoteData(address,uint256):((uint8,uint96))",
      [
        ethereum.Value.fromAddress(voter),
        ethereum.Value.fromUnsignedBigInt(proposalId)
      ]
    );

    return result[0].toTuple() as PollenDAO__getVoteDataResultValue0Struct;
  }

  try_getVoteData(
    voter: Address,
    proposalId: BigInt
  ): ethereum.CallResult<PollenDAO__getVoteDataResultValue0Struct> {
    let result = super.tryCall(
      "getVoteData",
      "getVoteData(address,uint256):((uint8,uint96))",
      [
        ethereum.Value.fromAddress(voter),
        ethereum.Value.fromUnsignedBigInt(proposalId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PollenDAO__getVoteDataResultValue0Struct
    );
  }

  getAssets(): Array<Address> {
    let result = super.call("getAssets", "getAssets():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getAssets(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getAssets", "getAssets():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getVotingTerms(termsId: BigInt): PollenDAO__getVotingTermsResultValue0Struct {
    let result = super.call(
      "getVotingTerms",
      "getVotingTerms(uint256):((bool,bool,uint8,uint32,uint32,uint32))",
      [ethereum.Value.fromUnsignedBigInt(termsId)]
    );

    return result[0].toTuple() as PollenDAO__getVotingTermsResultValue0Struct;
  }

  try_getVotingTerms(
    termsId: BigInt
  ): ethereum.CallResult<PollenDAO__getVotingTermsResultValue0Struct> {
    let result = super.tryCall(
      "getVotingTerms",
      "getVotingTerms(uint256):((bool,bool,uint8,uint32,uint32,uint32))",
      [ethereum.Value.fromUnsignedBigInt(termsId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as PollenDAO__getVotingTermsResultValue0Struct
    );
  }
}

export class WithdrawRewardsCall extends ethereum.Call {
  get inputs(): WithdrawRewardsCall__Inputs {
    return new WithdrawRewardsCall__Inputs(this);
  }

  get outputs(): WithdrawRewardsCall__Outputs {
    return new WithdrawRewardsCall__Outputs(this);
  }
}

export class WithdrawRewardsCall__Inputs {
  _call: WithdrawRewardsCall;

  constructor(call: WithdrawRewardsCall) {
    this._call = call;
  }

  get member(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawRewardsCall__Outputs {
  _call: WithdrawRewardsCall;

  constructor(call: WithdrawRewardsCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class GetPollenPriceCall extends ethereum.Call {
  get inputs(): GetPollenPriceCall__Inputs {
    return new GetPollenPriceCall__Inputs(this);
  }

  get outputs(): GetPollenPriceCall__Outputs {
    return new GetPollenPriceCall__Outputs(this);
  }
}

export class GetPollenPriceCall__Inputs {
  _call: GetPollenPriceCall;

  constructor(call: GetPollenPriceCall) {
    this._call = call;
  }
}

export class GetPollenPriceCall__Outputs {
  _call: GetPollenPriceCall;

  constructor(call: GetPollenPriceCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SubmitCall extends ethereum.Call {
  get inputs(): SubmitCall__Inputs {
    return new SubmitCall__Inputs(this);
  }

  get outputs(): SubmitCall__Outputs {
    return new SubmitCall__Outputs(this);
  }
}

export class SubmitCall__Inputs {
  _call: SubmitCall;

  constructor(call: SubmitCall) {
    this._call = call;
  }

  get proposalType(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get orderType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get baseCcyType(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get termsId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get assetTokenType(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get assetTokenAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get assetTokenAmount(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get pollenAmount(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get executor(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get descriptionCid(): string {
    return this._call.inputValues[9].value.toString();
  }
}

export class SubmitCall__Outputs {
  _call: SubmitCall;

  constructor(call: SubmitCall) {
    this._call = call;
  }
}

export class VoteOnCall extends ethereum.Call {
  get inputs(): VoteOnCall__Inputs {
    return new VoteOnCall__Inputs(this);
  }

  get outputs(): VoteOnCall__Outputs {
    return new VoteOnCall__Outputs(this);
  }
}

export class VoteOnCall__Inputs {
  _call: VoteOnCall;

  constructor(call: VoteOnCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get vote(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class VoteOnCall__Outputs {
  _call: VoteOnCall;

  constructor(call: VoteOnCall) {
    this._call = call;
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get pollenAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class UpdateProposalStatusCall extends ethereum.Call {
  get inputs(): UpdateProposalStatusCall__Inputs {
    return new UpdateProposalStatusCall__Inputs(this);
  }

  get outputs(): UpdateProposalStatusCall__Outputs {
    return new UpdateProposalStatusCall__Outputs(this);
  }
}

export class UpdateProposalStatusCall__Inputs {
  _call: UpdateProposalStatusCall;

  constructor(call: UpdateProposalStatusCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateProposalStatusCall__Outputs {
  _call: UpdateProposalStatusCall;

  constructor(call: UpdateProposalStatusCall) {
    this._call = call;
  }
}

export class UpdateRewardPoolCall extends ethereum.Call {
  get inputs(): UpdateRewardPoolCall__Inputs {
    return new UpdateRewardPoolCall__Inputs(this);
  }

  get outputs(): UpdateRewardPoolCall__Outputs {
    return new UpdateRewardPoolCall__Outputs(this);
  }
}

export class UpdateRewardPoolCall__Inputs {
  _call: UpdateRewardPoolCall;

  constructor(call: UpdateRewardPoolCall) {
    this._call = call;
  }
}

export class UpdateRewardPoolCall__Outputs {
  _call: UpdateRewardPoolCall;

  constructor(call: UpdateRewardPoolCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class AddAssetCall extends ethereum.Call {
  get inputs(): AddAssetCall__Inputs {
    return new AddAssetCall__Inputs(this);
  }

  get outputs(): AddAssetCall__Outputs {
    return new AddAssetCall__Outputs(this);
  }
}

export class AddAssetCall__Inputs {
  _call: AddAssetCall;

  constructor(call: AddAssetCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAssetCall__Outputs {
  _call: AddAssetCall;

  constructor(call: AddAssetCall) {
    this._call = call;
  }
}

export class RemoveAssetCall extends ethereum.Call {
  get inputs(): RemoveAssetCall__Inputs {
    return new RemoveAssetCall__Inputs(this);
  }

  get outputs(): RemoveAssetCall__Outputs {
    return new RemoveAssetCall__Outputs(this);
  }
}

export class RemoveAssetCall__Inputs {
  _call: RemoveAssetCall;

  constructor(call: RemoveAssetCall) {
    this._call = call;
  }

  get asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveAssetCall__Outputs {
  _call: RemoveAssetCall;

  constructor(call: RemoveAssetCall) {
    this._call = call;
  }
}

export class AddVotingTermsCall extends ethereum.Call {
  get inputs(): AddVotingTermsCall__Inputs {
    return new AddVotingTermsCall__Inputs(this);
  }

  get outputs(): AddVotingTermsCall__Outputs {
    return new AddVotingTermsCall__Outputs(this);
  }
}

export class AddVotingTermsCall__Inputs {
  _call: AddVotingTermsCall;

  constructor(call: AddVotingTermsCall) {
    this._call = call;
  }

  get terms(): AddVotingTermsCallTermsStruct {
    return this._call.inputValues[0].value.toTuple() as AddVotingTermsCallTermsStruct;
  }
}

export class AddVotingTermsCall__Outputs {
  _call: AddVotingTermsCall;

  constructor(call: AddVotingTermsCall) {
    this._call = call;
  }
}

export class AddVotingTermsCallTermsStruct extends ethereum.Tuple {
  get isEnabled(): boolean {
    return this[0].toBoolean();
  }

  get isExclPools(): boolean {
    return this[1].toBoolean();
  }

  get quorum(): i32 {
    return this[2].toI32();
  }

  get votingExpiryDelay(): BigInt {
    return this[3].toBigInt();
  }

  get executionOpenDelay(): BigInt {
    return this[4].toBigInt();
  }

  get executionExpiryDelay(): BigInt {
    return this[5].toBigInt();
  }
}

export class SwitchVotingTermsCall extends ethereum.Call {
  get inputs(): SwitchVotingTermsCall__Inputs {
    return new SwitchVotingTermsCall__Inputs(this);
  }

  get outputs(): SwitchVotingTermsCall__Outputs {
    return new SwitchVotingTermsCall__Outputs(this);
  }
}

export class SwitchVotingTermsCall__Inputs {
  _call: SwitchVotingTermsCall;

  constructor(call: SwitchVotingTermsCall) {
    this._call = call;
  }

  get termsId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get isEnabled(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SwitchVotingTermsCall__Outputs {
  _call: SwitchVotingTermsCall;

  constructor(call: SwitchVotingTermsCall) {
    this._call = call;
  }
}

export class UpdatePlnWhitelistCall extends ethereum.Call {
  get inputs(): UpdatePlnWhitelistCall__Inputs {
    return new UpdatePlnWhitelistCall__Inputs(this);
  }

  get outputs(): UpdatePlnWhitelistCall__Outputs {
    return new UpdatePlnWhitelistCall__Outputs(this);
  }
}

export class UpdatePlnWhitelistCall__Inputs {
  _call: UpdatePlnWhitelistCall;

  constructor(call: UpdatePlnWhitelistCall) {
    this._call = call;
  }

  get accounts(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get whitelisted(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class UpdatePlnWhitelistCall__Outputs {
  _call: UpdatePlnWhitelistCall;

  constructor(call: UpdatePlnWhitelistCall) {
    this._call = call;
  }
}

export class UpdateRewardParamsCall extends ethereum.Call {
  get inputs(): UpdateRewardParamsCall__Inputs {
    return new UpdateRewardParamsCall__Inputs(this);
  }

  get outputs(): UpdateRewardParamsCall__Outputs {
    return new UpdateRewardParamsCall__Outputs(this);
  }
}

export class UpdateRewardParamsCall__Inputs {
  _call: UpdateRewardParamsCall;

  constructor(call: UpdateRewardParamsCall) {
    this._call = call;
  }

  get _rewardParams(): UpdateRewardParamsCall_rewardParamsStruct {
    return this._call.inputValues[0].value.toTuple() as UpdateRewardParamsCall_rewardParamsStruct;
  }
}

export class UpdateRewardParamsCall__Outputs {
  _call: UpdateRewardParamsCall;

  constructor(call: UpdateRewardParamsCall) {
    this._call = call;
  }
}

export class UpdateRewardParamsCall_rewardParamsStruct extends ethereum.Tuple {
  get forVotingPoints(): i32 {
    return this[0].toI32();
  }

  get forProposalPoints(): i32 {
    return this[1].toI32();
  }

  get forExecutionPoints(): i32 {
    return this[2].toI32();
  }

  get forStateUpdPoints(): i32 {
    return this[3].toI32();
  }

  get forPlnDayPoints(): i32 {
    return this[4].toI32();
  }

  get __reserved(): BigInt {
    return this[5].toBigInt();
  }
}

export class PreventUseWithoutProxyCall extends ethereum.Call {
  get inputs(): PreventUseWithoutProxyCall__Inputs {
    return new PreventUseWithoutProxyCall__Inputs(this);
  }

  get outputs(): PreventUseWithoutProxyCall__Outputs {
    return new PreventUseWithoutProxyCall__Outputs(this);
  }
}

export class PreventUseWithoutProxyCall__Inputs {
  _call: PreventUseWithoutProxyCall;

  constructor(call: PreventUseWithoutProxyCall) {
    this._call = call;
  }
}

export class PreventUseWithoutProxyCall__Outputs {
  _call: PreventUseWithoutProxyCall;

  constructor(call: PreventUseWithoutProxyCall) {
    this._call = call;
  }
}
