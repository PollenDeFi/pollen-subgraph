enum ProposalType {
  Invest
  Divest
  Last
}

enum TokenType {
  ERC20
  Last
}

enum ProposalStatus {
  Null
  Submitted
  Executed
  Rejected
  Passed
  Pended
}

enum BaseCurrency {
  Asset
  Pai
}

enum OrderType {
  Limit
  Market
}

type ProposalTerm @entity {
  id: ID!
  executionExpiryDelay: BigInt!
  executionOpenDelay: BigInt!
  isEnabled: Boolean!
  isExclPools: Boolean!
  quorum: BigInt!
  votingExpiryDelay: BigInt!
}

type Voter @entity {
  id: ID!
  address: Bytes!
  inFavour: Boolean!
  votes: BigDecimal!
}

type Proposal @entity {
  id: ID!
  proposalType: ProposalType!
  assetToken: AssetToken!
  assetTokenAmount: BigDecimal!
  paiAmount: BigDecimal!
  description: String!
  submitter: Bytes!
  snapshot: Snapshot!
  yesVotes: BigDecimal!
  noVotes: BigDecimal!
  votingExpiry: BigInt!
  executionOpen: BigInt!
  executionExpiry: BigInt!
  status: ProposalStatus!
  votePassed: Boolean!
  executedAt: BigInt
  passVotes: BigDecimal!
  baseCurrency: BaseCurrency!
  terms: ProposalTerm!
  orderType: OrderType!
  voters: [Voter!]!
}

type Snapshot @entity {
  id: ID!
  paiSupply: BigDecimal!
  pollenSupply: BigDecimal!
  pollenEffectiveVoteSupply: BigDecimal!
}

type CurrentSupply @entity {
  id: ID!
  pai: BigDecimal!
  pollen: BigDecimal!
  effectivePollen: BigDecimal!
}

type AssetToken @entity {
  id: ID!
  name: String!
  symbol: String!
  type: TokenType!
  daoBalance: BigDecimal!
}

type Portfolio @entity {
  id: ID!
  contract: Bytes!
  assets: [AssetToken!]
}

enum RewardType {
  ForVoting
  ForProposalPassed
  ForExecution
  ForStateUpdate
  ForPlnHeld
}

type CommunityRewards @entity {
  id: ID!
  earnableRewards: [EarnableReward!]
}

type Member @entity {
  id: ID! # user address
  totalPoints: BigInt!
  totalWithdrawn: BigDecimal!
  rewards: [EarnedReward!]
  withdrawals: [PollenWithdrawal!]
  delegates: [Member!]!
}

type EarnedReward @entity {
  id: ID!
  points: BigInt!
  type: RewardType!
  earnedAt: BigInt! # Timestamp
}

type EarnableReward @entity {
  id: ID!
  type: RewardType!
  points: BigInt!
}

type PollenWithdrawal @entity {
  id: ID!
  recipient: Bytes!
  amount: BigDecimal!
  date: BigInt! # Timestamp
}
